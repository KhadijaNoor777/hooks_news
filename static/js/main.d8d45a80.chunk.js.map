{"version":3,"sources":["Results.js","App.js","reportWebVitals.js","index.js"],"names":["Results","results","map","result","style","fontSize","color","title","msgStyle","margin","App","useState","setResults","query","setQuery","loading","setLoading","error","setError","searchInputRef","useRef","useEffect","getResults","a","axios","get","response","data","hits","className","paddingLeft","onSubmit","e","preventDefault","type","onChange","target","value","ref","width","height","borderRadius","background","onClick","current","focus","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAGe,SAASA,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAC7B,OACI,cAAC,IAAD,UACI,gCAEI,uBAAK,uBACJA,EAAQC,KAAI,SAACC,GAAD,OACT,eAAC,IAAD,CAAMC,MAAO,CAACC,SAAS,OAAQC,MAAM,SAArC,UAAgDH,EAAOI,MAAM,kCCqEjF,IAAMC,EAAW,CACfC,OAAQ,OACRJ,SAAU,QAGGK,EA/Ef,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENV,EAFM,KAEGW,EAFH,OAGaD,mBAAS,eAHtB,mBAGNE,EAHM,KAGCC,EAHD,OAIiBH,oBAAS,GAJ1B,mBAINI,EAJM,KAIGC,EAJH,OAKaL,mBAAS,MALtB,mBAKNM,EALM,KAKCC,EALD,KAMPC,EAAiBC,mBAEvBC,qBAAU,WACRC,MAKC,IAEH,IAAMA,EAAU,uCAAG,4BAAAC,EAAA,6DACjBP,GAAW,GADM,kBAGQQ,IAAMC,IAAN,qDAAwDZ,IAHhE,OAGTa,EAHS,OAIfd,EAAWc,EAASC,KAAKC,MAJV,gDAOfV,EAAS,EAAD,IAPO,QASjBF,GAAW,GATM,yDAAH,qDAsBhB,OACE,sBAAKa,UAAU,MAAMzB,MAAO,CAAC0B,YAAa,QAA1C,UAEE,oBAAI1B,MAAO,CAACE,MAAO,mBAAnB,yBACA,uBAAMyB,SAdW,SAACC,GACpBA,EAAEC,iBACFX,KAYE,UACE,uBAAOY,KAAK,OAAOC,SAAU,SAACH,GAAD,OAAOlB,EAASkB,EAAEI,OAAOC,QAAQA,MAAOxB,EAAOyB,IAAKnB,EAC1Ef,MAAO,CAACmC,MAAM,QAAUC,OAAO,OAAQC,aAAa,SAE3D,wBAAQP,KAAK,SACL9B,MAAO,CAACK,OAAO,MAAQiC,WAAW,SAAWF,OAAO,OAAQC,aAAa,OADjF,SAEQ,yCAER,wBAAQP,KAAK,SAASS,QAjBR,SAACX,GACnBlB,EAAS,IACTK,EAAeyB,QAAQC,SAgBXzC,MAAO,CAAEsC,WAAW,oBAAqBpC,MAAM,QAASkC,OAAO,OAAQC,aAAa,OAD5F,SAEQ,2CAKR1B,EAAY,qBAAKX,MAAOI,EAAZ,SAAsB,qDAAsC,cAACR,EAAD,CAASC,QAASA,IAY3FgB,GAAS,qBAAKb,MAAOI,EAAZ,SAAsB,4BAAIS,EAAM6B,gBC9DjCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d8d45a80.chunk.js","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\r\n\r\nexport default function Results({results}) {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                {/* <h1>Results</h1> */}\r\n                <br/><br/>\r\n                {results.map((result) =>\r\n                    <Link style={{fontSize:'20px', color:'black'}}>{result.title}<br/></Link>\r\n                    \r\n                )}\r\n                {/* <ul>\r\n        \r\n                    {results.map((result) => {\r\n                    \r\n                    <li key={result.objectID}>\r\n                    \r\n                        <h2><a href={result.url}>{result.title}</a></h2>\r\n                        {console.log(result.title)}\r\n                    </li>\r\n                    })}\r\n                </ul> */}\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect, useRef} from 'react';\nimport './App.css'\nimport axios from 'axios';\nimport Results from './Results';\n\nfunction App() {\n\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState('react hooks')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null);\n  const searchInputRef = useRef();               //used for setting reference to html element\n\n  useEffect(() => {\n    getResults();\n        //  .then(response => {\n        //    console.log(response.data);\n        //    setResults(response.data.hits)\n        //  })\n  }, [])\n\n  const getResults = async () => {\n    setLoading(true);\n    try{\n      const response = await axios.get(`https://hn.algolia.com/api/v1/search?query=${query}`)\n      setResults(response.data.hits)\n    }\n    catch(err){\n      setError(err)\n    }\n    setLoading(false);\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    getResults();\n  }\n\n  const handleClear = (e) => {\n    setQuery(\"\");\n    searchInputRef.current.focus();\n  }\n\n  return (\n    <div className=\"App\" style={{paddingLeft: '20px'}}>\n\n      <h1 style={{color: 'rgb(58, 58, 58)'}}>Search News</h1>\n      <form onSubmit={handleSearch}>\n        <input type='text' onChange={(e) => setQuery(e.target.value)} value={query} ref={searchInputRef} \n               style={{width:'200px' , height:'20px', borderRadius:'3px'}}>\n        </input>\n        <button type='submit' \n                style={{margin:'5px' , background:'orange' , height:'25px', borderRadius:'3px'}}>\n                <b>Search</b>\n        </button>\n        <button type='button' onClick={handleClear} \n                style={{ background:'rgb(77, 209, 209)', color:'white', height:'25px', borderRadius:'3px'}}>\n                <b>Clear</b>\n        </button>\n      </form>\n\n\n      { loading ? ( <div style={msgStyle}><b>Loading Results...</b></div> ) : ( <Results results={results} /> )}\n      {/* <ul>\n      \n        {results.map((result) => {\n          \n          <li key={result.objectID}>\n          \n            <h2><a href={result.url}>{result.title}</a></h2>\n            {console.log(result.title)}\n          </li>\n        })}\n      </ul> */}\n      {error && <div style={msgStyle}><b>{error.message}</b></div>}\n    </div>\n  );\n}\n\nconst msgStyle = {\n  margin: '20px',\n  fontSize: '20px'\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}